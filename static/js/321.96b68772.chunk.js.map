{"version":3,"file":"static/js/321.96b68772.chunk.js","mappings":"sQAKO,SAASA,EAAWC,GAAe,IAADC,EAAXC,EAAOF,EAAPE,QACtBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAgC,IAApBH,EAAQI,UACpBC,EAAO,IAAIC,KAAKH,GAEhBI,EAAa,GAAAC,OAAMH,EAAKI,cAAa,KAAAD,QAAKH,EAAKK,WAAa,GAC/DC,WACAC,SAAS,EAAG,KAAI,KAAAJ,OAAIH,EAAKQ,UAAUF,WAAWC,SAAS,EAAG,KAAI,KAAAJ,OAAIH,EAClES,WACAH,WACAC,SAAS,EAAG,KAAI,KAAAJ,OAAIH,EAAKU,aAAaJ,WAAWC,SAAS,EAAG,KAAI,KAAAJ,OAAIH,EACrEW,aACAL,WACAC,SAAS,EAAG,MAETK,GAAcC,EAAAA,EAAAA,cAAY,WAC9BjB,EAAS,eAAiBD,EAAQmB,GACpC,GAAG,CAACnB,EAASC,IAEb,OACEmB,EAAAA,EAAAA,MAAA,OACEC,UAAU,mHACVC,QAASL,EAAYM,SAAA,EAErBH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BE,SAAA,EAC5CC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,wCAAuCE,SACnDvB,EAAQyB,SAEXD,EAAAA,EAAAA,KAAA,OAAKH,UAAU,8BAA6BE,SAAEvB,EAAQ0B,SACtDF,EAAAA,EAAAA,KAAA,OAAKH,UAAU,kCAAiCE,SAAEhB,QAEpDiB,EAAAA,EAAAA,KAACG,EAAAA,EAAK,CACJC,IAAkB,QAAf7B,EAAEC,EAAQ6B,aAAK,IAAA9B,EAAAA,EAAI+B,EACtBC,SAAS,EACTC,iBAAiB,YACjBX,UAAU,0BACVY,MAAO,CAAEC,MAAO,aAIxB,CC1Ce,SAASC,IACtB,IAAAC,GAAgCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAC5BI,GAAiCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAUF,EAAA,GAe7B,OAdAG,EAAAA,EAAAA,YAAU,WACRC,MAAM,mDACHC,MAAK,SAACC,GAAI,OAAKA,EAAKC,MAAM,IAC1BF,MAAK,SAACC,GACiB,IAADE,EAAH,IAAdF,EAAKG,MACPX,EAA8B,QAAnBU,EAACF,EAAKI,KAAKb,gBAAQ,IAAAW,EAAAA,EAAI,GAEtC,IACCG,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACd,IACCG,SAAQ,kBAAMb,GAAW,EAAM,GACpC,GAAG,KAGDrB,EAAAA,EAAAA,KAAA,OACEH,UAAU,iDACVY,MAAO,CAAE0B,SAAU,QAASC,SAAU,SAAUrC,UAEhDC,EAAAA,EAAAA,KAACqC,EAAAA,EAAI,CACHC,QAAQtC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,0BAAyBE,SAAC,6BACjDwC,WAAYvB,EACZwB,OAAO,EACP3C,UAAU,sBACV4C,QAASrB,EACTsB,WAAY,SAACC,GAAI,OACf3C,EAAAA,EAAAA,KAACqC,EAAAA,EAAKO,KAAI,CACRnC,MAAO,CAAEoC,cAAe,MAAOC,QAAS,OACxCjD,UAAU,SAAQE,UAElBC,EAAAA,EAAAA,KAAC3B,EAAW,CAACG,QAASmE,KACZ,KAKtB,C","sources":["pages/article-list/article-card/index.js","pages/article-list/index.js"],"sourcesContent":["import { Image } from \"antd\";\nimport defaultImage from \"../../../assets/default-cover.jpg\";\nimport { useCallback } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport function ArticleCard({ article }) {\n  const navigate = useNavigate();\n\n  const timestamp = article.update_at * 1000;\n  const date = new Date(timestamp);\n\n  const formattedDate = `${date.getFullYear()}-${(date.getMonth() + 1)\n    .toString()\n    .padStart(2, \"0\")}-${date.getDate().toString().padStart(2, \"0\")} ${date\n    .getHours()\n    .toString()\n    .padStart(2, \"0\")}:${date.getMinutes().toString().padStart(2, \"0\")}:${date\n    .getSeconds()\n    .toString()\n    .padStart(2, \"0\")}`;\n\n  const onClickCard = useCallback(() => {\n    navigate(\"/article?id=\" + article.id);\n  }, [article, navigate]);\n\n  return (\n    <div\n      className=\"flex h-36 bg-white items-center w-full rounded-xl hover:cursor-pointer shadow-xl overflow-hidden justify-between\"\n      onClick={onClickCard}\n    >\n      <div className=\"flex flex-col h-full mr-2 p-2\">\n        <div className=\"font-bold mb-2 line-clamp-1 text-base\">\n          {article.title}\n        </div>\n        <div className=\"line-clamp-3 text-base mb-2\">{article.brief}</div>\n        <div className=\"line-clamp-1 font-light text-sm\">{formattedDate}</div>\n      </div>\n      <Image\n        src={article.image ?? defaultImage}\n        preview={false}\n        wrapperClassName=\"w-36 h-36\"\n        className=\"aspect-square w-36 h-36\"\n        style={{ width: \"144px\" }}\n      />\n    </div>\n  );\n}\n","import { List } from \"antd\";\nimport { ArticleCard } from \"./article-card\";\nimport { useEffect, useState } from \"react\";\n\nexport default function ArticleList() {\n  const [articles, setArticles] = useState([]);\n  const [isFetching, setIsFetch] = useState(true);\n  useEffect(() => {\n    fetch(\"https://api.zymx.tech/article/list?page_size=10\")\n      .then((resp) => resp.json())\n      .then((resp) => {\n        if (resp.code === 0) {\n          setArticles(resp.data.articles ?? []);\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n      .finally(() => setIsFetch(false));\n  }, []);\n\n  return (\n    <div\n      className=\"w-full h-full flex justify-center min-h-screen\"\n      style={{ maxWidth: \"750px\", minWidth: \"360px\" }}\n    >\n      <List\n        header={<div className=\"text-2xl font-bold ml-4\">最近文章</div>}\n        dataSource={articles}\n        split={false}\n        className=\"w-full min-h-screen\"\n        loading={isFetching}\n        renderItem={(item) => (\n          <List.Item\n            style={{ paddingInline: \"0px\", padding: \"8px\" }}\n            className=\"w-full\"\n          >\n            <ArticleCard article={item} />\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\n"],"names":["ArticleCard","_ref","_article$image","article","navigate","useNavigate","timestamp","update_at","date","Date","formattedDate","concat","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","onClickCard","useCallback","id","_jsxs","className","onClick","children","_jsx","title","brief","Image","src","image","defaultImage","preview","wrapperClassName","style","width","ArticleList","_useState","useState","_useState2","_slicedToArray","articles","setArticles","_useState3","_useState4","isFetching","setIsFetch","useEffect","fetch","then","resp","json","_resp$data$articles","code","data","catch","err","console","log","finally","maxWidth","minWidth","List","header","dataSource","split","loading","renderItem","item","Item","paddingInline","padding"],"sourceRoot":""}